services:
  influxdb:
    image: influxdb:2.7.10
    ports:
      - "8086:8086"
    volumes:
      - influxdb-data:/var/lib/influxdb2
    environment:
      - DOCKER_INFLUXDB_INIT_MODE=setup
      - DOCKER_INFLUXDB_INIT_USERNAME=myuser
      - DOCKER_INFLUXDB_INIT_PASSWORD=mypassword
      - DOCKER_INFLUXDB_INIT_ORG=my-org
      - DOCKER_INFLUXDB_INIT_BUCKET=my-bucket
      - DOCKER_INFLUXDB_INIT_ADMIN_TOKEN=my-super-secret-auth-token
      - DOCKER_INFLUXDB_INIT_RETENTION=1h
    restart: always

  emqx:
    image: emqx/emqx:5.8
    ports:
      - "1883:1883"
      - "8083:8083"
      - "8084:8084"
      - "8883:8883"
      - "18083:18083"
    volumes:
      - emqx-data:/opt/emqx/data
      - emqx-log:/opt/emqx/log
    healthcheck:
      test: ["CMD", "/opt/emqx/bin/emqx", "ping"]
      interval: 5s
      timeout: 10s
      retries: 5
    restart: always


  telegraf:
    image: telegraf:1.32
    volumes:
      - ./telegraf.conf:/etc/telegraf/telegraf.conf:ro
    depends_on:
      emqx:
        condition: service_healthy
      influxdb:
        condition: service_started
    restart: unless-stopped

  temp-simulator:
    build: 
      context: ./temp_app
      dockerfile: Dockerfile
    depends_on:
      emqx:
        condition: service_healthy
    restart: unless-stopped

  sine-wave:
    build: 
      context: ./sine_wave
      dockerfile: Dockerfile
    depends_on:
      emqx:
        condition: service_healthy
    restart: unless-stopped

  ecg-wave:
    build: 
      context: ./ecg_app
      dockerfile: Dockerfile
    depends_on:
      emqx:
        condition: service_healthy
    restart: unless-stopped
  
  square-wave:
    build: 
      context: ./square_wave
      dockerfile: Dockerfile
    depends_on:
      emqx:
        condition: service_healthy
    restart: unless-stopped
  
  ramp-wave:
    build: 
      context: ./ramp_wave
      dockerfile: Dockerfile
    depends_on:
      emqx:
        condition: service_healthy
    restart: unless-stopped

  gaussian_noise-wave:
    build: 
      context: ./gaussian_noise
      dockerfile: Dockerfile
    depends_on:
      emqx:
        condition: service_healthy
    restart: unless-stopped
  
  ondicula-wave:
    build: 
      context: ./ondicula_wave
      dockerfile: Dockerfile
    depends_on:
      emqx:
        condition: service_healthy
    restart: unless-stopped

  egg-wave:
    build: 
      context: ./egg_app
      dockerfile: Dockerfile
    depends_on:
      emqx:
        condition: service_healthy
    restart: unless-stopped

  grafana:
    image: grafana/grafana:11.2.0
    ports:
      - "3000:3000"
    volumes:
      - grafana-data:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin_password
    depends_on:
      - influxdb
    restart: unless-stopped

volumes:
  influxdb-data:
  emqx-data:
  emqx-log:
  grafana-data: